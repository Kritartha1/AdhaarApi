{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.8.0.0",
        "fileVersion": "4.8.0-3.23524.11 (f43cd10b)",
        "semanticVersion": "4.8.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS0105",
          "level": "warning",
          "message": "The using directive for 'Adhaar.API.Data' appeared previously in this namespace",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/MigrationTest/ApiInitialMigration.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 7,
                  "endLine": 9,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 3
          }
        },
        {
          "ruleId": "CS0105",
          "level": "warning",
          "message": "The using directive for 'Adhaar.API.Data' appeared previously in this namespace",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ProgramTest.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 7,
                  "endLine": 6,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 3
          }
        },
        {
          "ruleId": "CS0105",
          "level": "warning",
          "message": "The using directive for 'Adhaar.API.Repositories.Implementaion' appeared previously in this namespace",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ProgramTest.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 7,
                  "endLine": 8,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 3
          }
        },
        {
          "ruleId": "CS0105",
          "level": "warning",
          "message": "The using directive for 'Adhaar.API.Repositories.Interface' appeared previously in this namespace",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ProgramTest.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 7,
                  "endLine": 9,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 3
          }
        },
        {
          "ruleId": "CS0105",
          "level": "warning",
          "message": "The using directive for 'Adhaar.API.Data' appeared previously in this namespace",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 7,
                  "endLine": 12,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 3
          }
        },
        {
          "ruleId": "CS0105",
          "level": "warning",
          "message": "The using directive for 'Adhaar.API.Models.Domain' appeared previously in this namespace",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 7,
                  "endLine": 13,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 3
          }
        },
        {
          "ruleId": "CS0105",
          "level": "warning",
          "message": "The using directive for 'Microsoft.EntityFrameworkCore' appeared previously in this namespace",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 7,
                  "endLine": 15,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 3
          }
        },
        {
          "ruleId": "CS0105",
          "level": "warning",
          "message": "The using directive for 'Microsoft.Extensions.Logging' appeared previously in this namespace",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 7,
                  "endLine": 16,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 3
          }
        },
        {
          "ruleId": "CS0105",
          "level": "warning",
          "message": "The using directive for 'Moq' appeared previously in this namespace",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 7,
                  "endLine": 17,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 3
          }
        },
        {
          "ruleId": "CS0105",
          "level": "warning",
          "message": "The using directive for 'Microsoft.EntityFrameworkCore' appeared previously in this namespace",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 7,
                  "endLine": 21,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 3
          }
        },
        {
          "ruleId": "CS8620",
          "level": "warning",
          "message": "Argument of type 'Dictionary<string, string>' cannot be used for parameter 'initialData' of type 'IEnumerable<KeyValuePair<string, string?>>' in 'IConfigurationBuilder MemoryConfigurationBuilderExtensions.AddInMemoryCollection(IConfigurationBuilder configurationBuilder, IEnumerable<KeyValuePair<string, string?>>? initialData)' due to differences in the nullability of reference types.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/TokenRepositoryTest.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 44,
                  "endLine": 39,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 's' in 'byte[] Encoding.GetBytes(string s)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/TokenRepositoryTest.cs",
                "region": {
                  "startLine": 63,
                  "startColumn": 75,
                  "endLine": 63,
                  "endColumn": 100
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field '_tokenRepository' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/TokenRepositoryTest.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 37,
                  "endLine": 24,
                  "endColumn": 53
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/TokenRepositoryTest.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 37,
                  "endLine": 24,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field '_configuration' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/TokenRepositoryTest.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 36,
                  "endLine": 25,
                  "endColumn": 50
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/TokenRepositoryTest.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 36,
                  "endLine": 25,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/SQLUserRepositoryTest.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 44,
                  "endLine": 58,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/SQLUserRepositoryTest.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 44,
                  "endLine": 100,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 74,
                  "endLine": 40,
                  "endColumn": 78
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/SQLUserRepositoryTest.cs",
                "region": {
                  "startLine": 128,
                  "startColumn": 51,
                  "endLine": 128,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field 'dbContext' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/SQLUserRepositoryTest.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 36,
                  "endLine": 16,
                  "endColumn": 45
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/SQLUserRepositoryTest.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 36,
                  "endLine": 16,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field 'userRepository' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/SQLUserRepositoryTest.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 35,
                  "endLine": 17,
                  "endColumn": 49
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/SQLUserRepositoryTest.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 35,
                  "endLine": 17,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 51,
                  "endLine": 42,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 34,
                  "endLine": 65,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 27,
                  "endLine": 70,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 30,
                  "endLine": 73,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 30,
                  "endLine": 73,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 35,
                  "endLine": 76,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8620",
          "level": "warning",
          "message": "Argument of type 'ISetup<IImageRepository, Task<List<ImageAd>>>' cannot be used for parameter 'mock' of type 'IReturns<IImageRepository, Task<List<ImageAd>?>>' in 'IReturnsResult<IImageRepository> ReturnsExtensions.ReturnsAsync<IImageRepository, List<ImageAd>?>(IReturns<IImageRepository, Task<List<ImageAd>?>> mock, List<ImageAd>? value)' due to differences in the nullability of reference types.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 17,
                  "endLine": 75,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 51,
                  "endLine": 83,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 108,
                  "startColumn": 34,
                  "endLine": 108,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 114,
                  "startColumn": 27,
                  "endLine": 114,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 118,
                  "startColumn": 35,
                  "endLine": 118,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 125,
                  "startColumn": 51,
                  "endLine": 125,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 215,
                  "startColumn": 35,
                  "endLine": 215,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 292,
                  "startColumn": 34,
                  "endLine": 292,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 213,
                  "startColumn": 35,
                  "endLine": 213,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 220,
                  "startColumn": 73,
                  "endLine": 220,
                  "endColumn": 79
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 264,
                  "startColumn": 34,
                  "endLine": 264,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 274,
                  "startColumn": 92,
                  "endLine": 274,
                  "endColumn": 105
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 281,
                  "startColumn": 34,
                  "endLine": 281,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field 'imageController' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 37,
                  "endLine": 24,
                  "endColumn": 52
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 37,
                  "endLine": 24,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field 'mapperMock' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 35,
                  "endLine": 25,
                  "endColumn": 45
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 35,
                  "endLine": 25,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field 'dbContextMock' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 46,
                  "endLine": 26,
                  "endColumn": 59
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 46,
                  "endLine": 26,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field 'userRepositoryMock' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 43,
                  "endLine": 27,
                  "endColumn": 61
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 43,
                  "endLine": 27,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field 'imageRepositoryMock' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 44,
                  "endLine": 28,
                  "endColumn": 63
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 44,
                  "endLine": 28,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field 'loggerMock' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 52,
                  "endLine": 29,
                  "endColumn": 62
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 52,
                  "endLine": 29,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field 'imageRepository' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 37,
                  "endLine": 32,
                  "endColumn": 52
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 37,
                  "endLine": 32,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field 'dbContextMock' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 46,
                  "endLine": 33,
                  "endColumn": 59
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 46,
                  "endLine": 33,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field 'loggerMock' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 52,
                  "endLine": 34,
                  "endColumn": 62
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 52,
                  "endLine": 34,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 108,
                  "endLine": 47,
                  "endColumn": 112
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 114,
                  "endLine": 47,
                  "endColumn": 118
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 120,
                  "endLine": 47,
                  "endColumn": 124
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 126,
                  "endLine": 47,
                  "endColumn": 130
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 132,
                  "endLine": 47,
                  "endColumn": 136
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 138,
                  "endLine": 47,
                  "endColumn": 142
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 144,
                  "endLine": 47,
                  "endColumn": 148
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 150,
                  "endLine": 47,
                  "endColumn": 154
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 54,
                  "startColumn": 143,
                  "endLine": 54,
                  "endColumn": 147
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field '_options' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/MigrationTest/AuthMigration.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 58,
                  "endLine": 15,
                  "endColumn": 66
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/MigrationTest/AuthMigration.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 58,
                  "endLine": 15,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 44,
                  "endLine": 91,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 31,
                  "endLine": 92,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field '_context' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/MigrationTest/ApiInitialMigration.cs",
                "region": {
                  "startLine": 99,
                  "startColumn": 40,
                  "endLine": 99,
                  "endColumn": 48
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/MigrationTest/ApiInitialMigration.cs",
                "region": {
                  "startLine": 99,
                  "startColumn": 40,
                  "endLine": 99,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 115,
                  "startColumn": 64,
                  "endLine": 115,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field '_serviceProvider' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/MigrationTest/Api2Migration.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 38,
                  "endLine": 27,
                  "endColumn": 54
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/MigrationTest/Api2Migration.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 38,
                  "endLine": 27,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 152,
                  "startColumn": 34,
                  "endLine": 152,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 156,
                  "startColumn": 41,
                  "endLine": 156,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 179,
                  "startColumn": 35,
                  "endLine": 179,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 186,
                  "startColumn": 63,
                  "endLine": 186,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 226,
                  "startColumn": 52,
                  "endLine": 226,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 244,
                  "startColumn": 54,
                  "endLine": 244,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 262,
                  "startColumn": 54,
                  "endLine": 262,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 287,
                  "startColumn": 34,
                  "endLine": 287,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 288,
                  "startColumn": 37,
                  "endLine": 288,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 288,
                  "startColumn": 37,
                  "endLine": 288,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 298,
                  "startColumn": 35,
                  "endLine": 298,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field 'authController' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 36,
                  "endLine": 34,
                  "endColumn": 50
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 36,
                  "endLine": 34,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field 'loggerMock' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 51,
                  "endLine": 35,
                  "endColumn": 61
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 51,
                  "endLine": 35,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field 'userManagerMock' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 53,
                  "endLine": 36,
                  "endColumn": 68
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 53,
                  "endLine": 36,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field 'tokenRepositoryMock' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 44,
                  "endLine": 37,
                  "endColumn": 63
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 44,
                  "endLine": 37,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field 'mapperMock' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 35,
                  "endLine": 38,
                  "endColumn": 45
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 35,
                  "endLine": 38,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field 'dbContextMock' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 46,
                  "endLine": 39,
                  "endColumn": 59
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 46,
                  "endLine": 39,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field 'userRepositoryMock' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 43,
                  "endLine": 40,
                  "endColumn": 61
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 43,
                  "endLine": 40,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field 'fileSystemMock' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 39,
                  "endLine": 41,
                  "endColumn": 53
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 39,
                  "endLine": 41,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "NUnit2036",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(collection, Is.Not.Empty), instead of the classic model, Assert.IsNotEmpty(collection)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/TokenRepositoryTest.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 17,
                  "endLine": 56,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotEmpty"
            }
          }
        },
        {
          "ruleId": "NUnit2003",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.True), instead of the classic model, Assert.IsTrue(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/TokenRepositoryTest.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 17,
                  "endLine": 57,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsTrue"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/SQLUserRepositoryTest.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 13,
                  "endLine": 57,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/SQLUserRepositoryTest.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 13,
                  "endLine": 58,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/SQLUserRepositoryTest.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 13,
                  "endLine": 41,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/SQLUserRepositoryTest.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 13,
                  "endLine": 42,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2017",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Null), instead of the classic model, Assert.IsNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/SQLUserRepositoryTest.cs",
                "region": {
                  "startLine": 68,
                  "startColumn": 13,
                  "endLine": 68,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNull"
            }
          }
        },
        {
          "ruleId": "NUnit2017",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Null), instead of the classic model, Assert.IsNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/SQLUserRepositoryTest.cs",
                "region": {
                  "startLine": 110,
                  "startColumn": 13,
                  "endLine": 110,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNull"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/SQLUserRepositoryTest.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 13,
                  "endLine": 83,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/SQLUserRepositoryTest.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 13,
                  "endLine": 84,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/SQLUserRepositoryTest.cs",
                "region": {
                  "startLine": 99,
                  "startColumn": 13,
                  "endLine": 99,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/SQLUserRepositoryTest.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 13,
                  "endLine": 100,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2017",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Null), instead of the classic model, Assert.IsNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/SQLUserRepositoryTest.cs",
                "region": {
                  "startLine": 142,
                  "startColumn": 13,
                  "endLine": 142,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNull"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/SQLUserRepositoryTest.cs",
                "region": {
                  "startLine": 127,
                  "startColumn": 13,
                  "endLine": 127,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/SQLUserRepositoryTest.cs",
                "region": {
                  "startLine": 128,
                  "startColumn": 13,
                  "endLine": 128,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/SQLUserRepositoryTest.cs",
                "region": {
                  "startLine": 129,
                  "startColumn": 13,
                  "endLine": 129,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 17,
                  "endLine": 64,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 17,
                  "endLine": 65,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 27,
                  "endLine": 70,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 17,
                  "endLine": 107,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 108,
                  "startColumn": 17,
                  "endLine": 108,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 17,
                  "endLine": 82,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 17,
                  "endLine": 83,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2017",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Null), instead of the classic model, Assert.IsNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 221,
                  "startColumn": 17,
                  "endLine": 221,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNull"
            }
          }
        },
        {
          "ruleId": "NUnit2017",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Null), instead of the classic model, Assert.IsNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 226,
                  "startColumn": 17,
                  "endLine": 226,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNull"
            }
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 114,
                  "startColumn": 27,
                  "endLine": 114,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 124,
                  "startColumn": 17,
                  "endLine": 124,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 125,
                  "startColumn": 17,
                  "endLine": 125,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 244,
                  "startColumn": 17,
                  "endLine": 244,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 245,
                  "startColumn": 17,
                  "endLine": 245,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2017",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Null), instead of the classic model, Assert.IsNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 250,
                  "startColumn": 17,
                  "endLine": 250,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNull"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 275,
                  "startColumn": 17,
                  "endLine": 275,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 276,
                  "startColumn": 17,
                  "endLine": 276,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2017",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Null), instead of the classic model, Assert.IsNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 281,
                  "startColumn": 17,
                  "endLine": 281,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNull"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 219,
                  "startColumn": 17,
                  "endLine": 219,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 220,
                  "startColumn": 17,
                  "endLine": 220,
                  "endColumn": 86
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2017",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Null), instead of the classic model, Assert.IsNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 298,
                  "startColumn": 17,
                  "endLine": 298,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNull"
            }
          }
        },
        {
          "ruleId": "NUnit2017",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Null), instead of the classic model, Assert.IsNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 302,
                  "startColumn": 17,
                  "endLine": 302,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNull"
            }
          }
        },
        {
          "ruleId": "NUnit2017",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Null), instead of the classic model, Assert.IsNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 189,
                  "startColumn": 17,
                  "endLine": 189,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNull"
            }
          }
        },
        {
          "ruleId": "NUnit2017",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Null), instead of the classic model, Assert.IsNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 190,
                  "startColumn": 17,
                  "endLine": 190,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNull"
            }
          }
        },
        {
          "ruleId": "NUnit2017",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Null), instead of the classic model, Assert.IsNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 351,
                  "startColumn": 17,
                  "endLine": 351,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNull"
            }
          }
        },
        {
          "ruleId": "NUnit2017",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Null), instead of the classic model, Assert.IsNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 355,
                  "startColumn": 17,
                  "endLine": 355,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNull"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 324,
                  "startColumn": 17,
                  "endLine": 324,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 325,
                  "startColumn": 17,
                  "endLine": 325,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 330,
                  "startColumn": 17,
                  "endLine": 330,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2017",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Null), instead of the classic model, Assert.IsNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 398,
                  "startColumn": 17,
                  "endLine": 398,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNull"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 280,
                  "startColumn": 13,
                  "endLine": 280,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 281,
                  "startColumn": 13,
                  "endLine": 281,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2017",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Null), instead of the classic model, Assert.IsNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/RepositoriesTest/ImplementationTest/ImageRepositoryTest.cs",
                "region": {
                  "startLine": 384,
                  "startColumn": 17,
                  "endLine": 384,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNull"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 263,
                  "startColumn": 13,
                  "endLine": 263,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 264,
                  "startColumn": 13,
                  "endLine": 264,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/ImageControllerTests.cs",
                "region": {
                  "startLine": 265,
                  "startColumn": 13,
                  "endLine": 265,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ProgramTest.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 17,
                  "endLine": 65,
                  "endColumn": 91
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/MigrationTest/AuthMigration.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 17,
                  "endLine": 39,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/MigrationTest/AuthMigration.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 17,
                  "endLine": 40,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'AssertServiceRegistered' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ProgramTest.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 26,
                  "endLine": 60,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/MigrationTest/AuthMigration.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 17,
                  "endLine": 67,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 17,
                  "endLine": 90,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 17,
                  "endLine": 91,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2017",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Null), instead of the classic model, Assert.IsNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 17,
                  "endLine": 92,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNull"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 93,
                  "startColumn": 17,
                  "endLine": 93,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/MigrationTest/AuthMigration.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 17,
                  "endLine": 53,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 114,
                  "startColumn": 17,
                  "endLine": 114,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 115,
                  "startColumn": 17,
                  "endLine": 115,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2035",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(collection, Is.Empty), instead of the classic model, Assert.IsEmpty(collection)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/MigrationTest/ApiInitialMigration.cs",
                "region": {
                  "startLine": 127,
                  "startColumn": 13,
                  "endLine": 127,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsEmpty"
            }
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/MigrationTest/Api2Migration.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 25,
                  "endLine": 46,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "NUnit2003",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.True), instead of the classic model, Assert.IsTrue(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/MigrationTest/ApiInitialMigration.cs",
                "region": {
                  "startLine": 142,
                  "startColumn": 17,
                  "endLine": 142,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsTrue"
            }
          }
        },
        {
          "ruleId": "NUnit2003",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.True), instead of the classic model, Assert.IsTrue(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/MigrationTest/ApiInitialMigration.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 17,
                  "endLine": 143,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsTrue"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 185,
                  "startColumn": 17,
                  "endLine": 185,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 186,
                  "startColumn": 17,
                  "endLine": 186,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 243,
                  "startColumn": 17,
                  "endLine": 243,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 244,
                  "startColumn": 17,
                  "endLine": 244,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 261,
                  "startColumn": 17,
                  "endLine": 261,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 262,
                  "startColumn": 17,
                  "endLine": 262,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 225,
                  "startColumn": 17,
                  "endLine": 225,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 226,
                  "startColumn": 17,
                  "endLine": 226,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 304,
                  "startColumn": 17,
                  "endLine": 304,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 151,
                  "startColumn": 13,
                  "endLine": 151,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 152,
                  "startColumn": 13,
                  "endLine": 152,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 155,
                  "startColumn": 13,
                  "endLine": 155,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 156,
                  "startColumn": 13,
                  "endLine": 156,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 157,
                  "startColumn": 13,
                  "endLine": 157,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 158,
                  "startColumn": 13,
                  "endLine": 158,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 159,
                  "startColumn": 13,
                  "endLine": 159,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 286,
                  "startColumn": 17,
                  "endLine": 286,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2019",
          "level": "note",
          "message": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 287,
                  "startColumn": 17,
                  "endLine": 287,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "IsNotNull"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Nath/source/repos/New%20folder/New%20folder%20(2)/AdhaarApi/Adhaar.API.Tests/ControllerTests/AuthControllerTest.cs",
                "region": {
                  "startLine": 288,
                  "startColumn": 17,
                  "endLine": 288,
                  "endColumn": 101
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        }
      ],
      "rules": {
        "CA1822": {
          "id": "CA1822",
          "shortDescription": "Mark members as static",
          "fullDescription": "Members that do not access instance data or call instance methods can be marked as static. After you mark the methods as static, the compiler will emit nonvirtual call sites to these members. This can give you a measurable performance gain for performance-sensitive code.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1822",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CS0105": {
          "id": "CS0105",
          "shortDescription": "Using directive appeared previously in this namespace",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS0105)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS1998": {
          "id": "CS1998",
          "shortDescription": "Async method lacks 'await' operators and will run synchronously",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS1998)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8600": {
          "id": "CS8600",
          "shortDescription": "Converting null literal or possible null value to non-nullable type.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8600)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8602": {
          "id": "CS8602",
          "shortDescription": "Dereference of a possibly null reference.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8602)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8604": {
          "id": "CS8604",
          "shortDescription": "Possible null reference argument.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8604)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8618": {
          "id": "CS8618",
          "shortDescription": "Non-nullable field must contain a non-null value when exiting constructor. Consider declaring as nullable.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8618)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8620": {
          "id": "CS8620",
          "shortDescription": "Argument cannot be used for parameter due to differences in the nullability of reference types.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8620)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8625": {
          "id": "CS8625",
          "shortDescription": "Cannot convert null literal to non-nullable reference type.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8625)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "NUnit2003": {
          "id": "NUnit2003",
          "shortDescription": "Consider using Assert.That(expr, Is.True) instead of Assert.IsTrue(expr)",
          "fullDescription": "Consider using the constraint model, Assert.That(expr, Is.True), instead of the classic model, Assert.IsTrue(expr).",
          "defaultLevel": "note",
          "helpUri": "https://github.com/nunit/nunit.analyzers/tree/master/documentation/NUnit2003.md",
          "properties": {
            "category": "Assertion",
            "isEnabledByDefault": true
          }
        },
        "NUnit2005": {
          "id": "NUnit2005",
          "shortDescription": "Consider using Assert.That(actual, Is.EqualTo(expected)) instead of Assert.AreEqual(expected, actual)",
          "fullDescription": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual).",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/nunit/nunit.analyzers/tree/master/documentation/NUnit2005.md",
          "properties": {
            "category": "Assertion",
            "isEnabledByDefault": true
          }
        },
        "NUnit2017": {
          "id": "NUnit2017",
          "shortDescription": "Consider using Assert.That(expr, Is.Null) instead of Assert.IsNull(expr)",
          "fullDescription": "Consider using the constraint model, Assert.That(expr, Is.Null), instead of the classic model, Assert.IsNull(expr).",
          "defaultLevel": "note",
          "helpUri": "https://github.com/nunit/nunit.analyzers/tree/master/documentation/NUnit2017.md",
          "properties": {
            "category": "Assertion",
            "isEnabledByDefault": true
          }
        },
        "NUnit2019": {
          "id": "NUnit2019",
          "shortDescription": "Consider using Assert.That(expr, Is.Not.Null) instead of Assert.IsNotNull(expr)",
          "fullDescription": "Consider using the constraint model, Assert.That(expr, Is.Not.Null), instead of the classic model, Assert.IsNotNull(expr).",
          "defaultLevel": "note",
          "helpUri": "https://github.com/nunit/nunit.analyzers/tree/master/documentation/NUnit2019.md",
          "properties": {
            "category": "Assertion",
            "isEnabledByDefault": true
          }
        },
        "NUnit2035": {
          "id": "NUnit2035",
          "shortDescription": "Consider using Assert.That(collection, Is.Empty) instead of Assert.IsEmpty(collection)",
          "fullDescription": "Consider using the constraint model, Assert.That(collection, Is.Empty), instead of the classic model, Assert.IsEmpty(collection).",
          "defaultLevel": "note",
          "helpUri": "https://github.com/nunit/nunit.analyzers/tree/master/documentation/NUnit2035.md",
          "properties": {
            "category": "Assertion",
            "isEnabledByDefault": true
          }
        },
        "NUnit2036": {
          "id": "NUnit2036",
          "shortDescription": "Consider using Assert.That(collection, Is.Not.Empty) instead of Assert.IsNotEmpty(collection)",
          "fullDescription": "Consider using the constraint model, Assert.That(collection, Is.Not.Empty), instead of the classic model, Assert.IsNotEmpty(collection).",
          "defaultLevel": "note",
          "helpUri": "https://github.com/nunit/nunit.analyzers/tree/master/documentation/NUnit2036.md",
          "properties": {
            "category": "Assertion",
            "isEnabledByDefault": true
          }
        },
        "S2699": {
          "id": "S2699",
          "shortDescription": "Tests should include assertions",
          "fullDescription": "The rule targets test methods that lack an assertion and consist solely of an action and, optionally, a setup.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2699",
          "properties": {
            "category": "Blocker Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}